[2024-03-18T03:00:04.888+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: weather_api_dag.get_weather_data scheduled__2024-03-18T02:00:00+00:00 [queued]>
[2024-03-18T03:00:04.894+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: weather_api_dag.get_weather_data scheduled__2024-03-18T02:00:00+00:00 [queued]>
[2024-03-18T03:00:04.895+0000] {taskinstance.py:2171} INFO - Starting attempt 1 of 1
[2024-03-18T03:00:04.909+0000] {taskinstance.py:2192} INFO - Executing <Task(PythonOperator): get_weather_data> on 2024-03-18 02:00:00+00:00
[2024-03-18T03:00:04.919+0000] {standard_task_runner.py:60} INFO - Started process 89 to run task
[2024-03-18T03:00:04.923+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'weather_api_dag', 'get_weather_data', 'scheduled__2024-03-18T02:00:00+00:00', '--job-id', '520', '--raw', '--subdir', 'DAGS_FOLDER/weather_api__dag.py', '--cfg-path', '/tmp/tmpd1r4iu0i']
[2024-03-18T03:00:04.924+0000] {standard_task_runner.py:88} INFO - Job 520: Subtask get_weather_data
[2024-03-18T03:00:04.966+0000] {task_command.py:423} INFO - Running <TaskInstance: weather_api_dag.get_weather_data scheduled__2024-03-18T02:00:00+00:00 [running]> on host 78bfa696c222
[2024-03-18T03:00:05.043+0000] {taskinstance.py:2481} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='kan@odds.team' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='weather_api_dag' AIRFLOW_CTX_TASK_ID='get_weather_data' AIRFLOW_CTX_EXECUTION_DATE='2024-03-18T02:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-03-18T02:00:00+00:00'
[2024-03-18T03:00:05.050+0000] {logging_mixin.py:188} INFO - {'conf': <***.configuration.AirflowConfigParser object at 0x7fb8b3e79190>, 'dag': <DAG: weather_api_dag>, 'dag_run': <DagRun weather_api_dag @ 2024-03-18 02:00:00+00:00: scheduled__2024-03-18T02:00:00+00:00, state:running, queued_at: 2024-03-18 03:00:00.508115+00:00. externally triggered: False>, 'data_interval_end': DateTime(2024, 3, 18, 3, 0, 0, tzinfo=Timezone('UTC')), 'data_interval_start': DateTime(2024, 3, 18, 2, 0, 0, tzinfo=Timezone('UTC')), 'ds': '2024-03-18', 'ds_nodash': '20240318', 'execution_date': <Proxy at 0x7fb88763d040 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'execution_date', DateTime(2024, 3, 18, 2, 0, 0, tzinfo=Timezone('UTC')))>, 'expanded_ti_count': None, 'inlets': [], 'logical_date': DateTime(2024, 3, 18, 2, 0, 0, tzinfo=Timezone('UTC')), 'macros': <module '***.macros' from '/home/***/.local/lib/python3.8/site-packages/***/macros/__init__.py'>, 'next_ds': <Proxy at 0x7fb8875692c0 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'next_ds', '2024-03-18')>, 'next_ds_nodash': <Proxy at 0x7fb8872cb0c0 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'next_ds_nodash', '20240318')>, 'next_execution_date': <Proxy at 0x7fb8872cb040 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'next_execution_date', DateTime(2024, 3, 18, 3, 0, 0, tzinfo=Timezone('UTC')))>, 'outlets': [], 'params': {}, 'prev_data_interval_start_success': DateTime(2024, 3, 16, 2, 0, 0, tzinfo=Timezone('UTC')), 'prev_data_interval_end_success': DateTime(2024, 3, 16, 3, 0, 0, tzinfo=Timezone('UTC')), 'prev_ds': <Proxy at 0x7fb8872cb380 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'prev_ds', '2024-03-18')>, 'prev_ds_nodash': <Proxy at 0x7fb8872cb3c0 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'prev_ds_nodash', '20240318')>, 'prev_execution_date': <Proxy at 0x7fb8872cb400 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'prev_execution_date', DateTime(2024, 3, 18, 1, 0, 0, tzinfo=Timezone('UTC')))>, 'prev_execution_date_success': <Proxy at 0x7fb8872cb440 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'prev_execution_date_success', DateTime(2024, 3, 16, 2, 0, 0, tzinfo=Timezone('UTC')))>, 'prev_start_date_success': DateTime(2024, 3, 16, 3, 0, 0, 78788, tzinfo=Timezone('UTC')), 'prev_end_date_success': DateTime(2024, 3, 16, 3, 0, 17, 621462, tzinfo=Timezone('UTC')), 'run_id': 'scheduled__2024-03-18T02:00:00+00:00', 'task': <Task(PythonOperator): get_weather_data>, 'task_instance': <TaskInstance: weather_api_dag.get_weather_data scheduled__2024-03-18T02:00:00+00:00 [running]>, 'task_instance_key_str': 'weather_api_dag__get_weather_data__20240318', 'test_mode': False, 'ti': <TaskInstance: weather_api_dag.get_weather_data scheduled__2024-03-18T02:00:00+00:00 [running]>, 'tomorrow_ds': <Proxy at 0x7fb8872cb480 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'tomorrow_ds', '2024-03-19')>, 'tomorrow_ds_nodash': <Proxy at 0x7fb8872cb4c0 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'tomorrow_ds_nodash', '20240319')>, 'triggering_dataset_events': <Proxy at 0x7fb8872ee900 with factory <function _get_template_context.<locals>.get_triggering_events at 0x7fb8872e51f0>>, 'ts': '2024-03-18T02:00:00+00:00', 'ts_nodash': '20240318T020000', 'ts_nodash_with_tz': '20240318T020000+0000', 'var': {'json': None, 'value': None}, 'conn': None, 'yesterday_ds': <Proxy at 0x7fb8872cb500 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'yesterday_ds', '2024-03-17')>, 'yesterday_ds_nodash': <Proxy at 0x7fb8872cb540 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7fb8872d6d30>, 'yesterday_ds_nodash', '20240317')>, 'templates_dict': None}
[2024-03-18T03:00:05.051+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/utils/context.py:315: AirflowContextDeprecationWarning: Accessing 'execution_date' from the template is deprecated and will be removed in a future version. Please use 'data_interval_start' or 'logical_date' instead.
  warnings.warn(_create_deprecation_warning(k, replacements))

[2024-03-18T03:00:05.051+0000] {logging_mixin.py:188} INFO - 2024-03-18T02:00:00+00:00
[2024-03-18T03:00:05.051+0000] {logging_mixin.py:188} INFO - 2024-03-18
[2024-03-18T03:00:06.109+0000] {logging_mixin.py:188} INFO - https://api.openweathermap.org/data/2.5/weather?q=bangkok&appid=***&units=metric
[2024-03-18T03:00:06.109+0000] {logging_mixin.py:188} INFO - {'coord': {'lon': 100.5167, 'lat': 13.75}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 'base': 'stations', 'main': {'temp': 31.31, 'feels_like': 38.31, 'temp_min': 30.94, 'temp_max': 32.73, 'pressure': 1012, 'humidity': 72, 'sea_level': 1012, 'grnd_level': 1011}, 'visibility': 10000, 'wind': {'speed': 4.85, 'deg': 181, 'gust': 4.91}, 'clouds': {'all': 76}, 'dt': 1710730423, 'sys': {'type': 2, 'id': 2032756, 'country': 'TH', 'sunrise': 1710717807, 'sunset': 1710761313}, 'timezone': 25200, 'id': 1609350, 'name': 'Bangkok', 'cod': 200}
[2024-03-18T03:00:06.110+0000] {python.py:201} INFO - Done. Returned value was: /opt/***/dags/weather_data_2024-03-18T02:00:00+00:00.json
[2024-03-18T03:00:06.134+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=weather_api_dag, task_id=get_weather_data, execution_date=20240318T020000, start_date=20240318T030004, end_date=20240318T030006
[2024-03-18T03:00:06.175+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-03-18T03:00:06.197+0000] {taskinstance.py:3281} INFO - 1 downstream tasks scheduled from follow-on schedule check
